server:
  port: 8081

spring:
  jpa:
    hibernate:
      ddl-auto: update
      generate-ddl: false
      dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://localhost:5432/pedidos?createDatabaseIfNotExist=true
    username: root
    password: root
    type: com.zaxxer.hikari.HikariDataSource
    hikari.maximum-pooll-size: 10
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      key-serializer : org.apache.kafka.common.serialization.StringSerializer
      value-serializer : org.springframework.kafka.support.serializer.JsonSerializer
      client-id: pedidos
      topic:
        novo-pedido: PEDIDO_NOVO
        pedido-cancelado: PEDIDO_CANCELADO
  kafka2:
    bootstrap-servers: 127.0.0.1:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      client-id: conta
      topic: NOVA_CONTA
  kafka3:
    bootstrap-servers: 127.0.0.1:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      client-id: marketplace
      topic: NOVA_PROMOCAO

management:
  health:
    diskSpace:
      enabled: false
    ping:
      enabled: false
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health, scheduledtasks